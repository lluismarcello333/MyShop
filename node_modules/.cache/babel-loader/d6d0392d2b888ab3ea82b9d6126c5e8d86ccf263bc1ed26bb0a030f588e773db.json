{"ast":null,"code":"const initialState = {\n  user: {\n    name: 'Luiz',\n    email: '<EMAIL>'\n  }\n};\n\n// Reducer: guarda o estado que desejamos compartilhar na aplicação e manipula/altera o estado\n\n//Todo Reducer precisa retornar o nosso estado atualizado\nexport function userReducer(state = initialState, action) {\n  if (action.type === \"user/login\") {\n    return {\n      user: {\n        name: \"Luiz Marcelo\",\n        email: \"lluismarcello333@gmail.com\"\n      }\n    };\n  }\n  return state;\n}","map":{"version":3,"names":["initialState","user","name","email","userReducer","state","action","type"],"sources":["/home/luiz/Documentos/projects/myshop/src/redux/UserReducer/reducer.ts"],"sourcesContent":["interface User {\n  name: string;\n  email: string;\n}\n\ninterface UserState {\n  user: User | null;\n}\n\nconst initialState: UserState = {\n  user: {\n    name:'Luiz',\n    email:'<EMAIL>'\n  }\n};\n\n// Reducer: guarda o estado que desejamos compartilhar na aplicação e manipula/altera o estado\n\ninterface UserAction {\n  type: string;\n  payload?: User;\n}\n//Todo Reducer precisa retornar o nosso estado atualizado\nexport function userReducer(\n  state = initialState,\n  action: UserAction\n): UserState {\n  if (action.type === \"user/login\") {\n    return {\n      user: {\n        name: \"Luiz Marcelo\",\n        email: \"lluismarcello333@gmail.com\",\n      },\n    };\n  }\n  return state;\n}\n"],"mappings":"AASA,MAAMA,YAAuB,GAAG;EAC9BC,IAAI,EAAE;IACJC,IAAI,EAAC,MAAM;IACXC,KAAK,EAAC;EACR;AACF,CAAC;;AAED;;AAMA;AACA,OAAO,SAASC,WAAWA,CACzBC,KAAK,GAAGL,YAAY,EACpBM,MAAkB,EACP;EACX,IAAIA,MAAM,CAACC,IAAI,KAAK,YAAY,EAAE;IAChC,OAAO;MACLN,IAAI,EAAE;QACJC,IAAI,EAAE,cAAc;QACpBC,KAAK,EAAE;MACT;IACF,CAAC;EACH;EACA,OAAOE,KAAK;AACd"},"metadata":{},"sourceType":"module","externalDependencies":[]}