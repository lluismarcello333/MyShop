{"ast":null,"code":"/* import { createStore, applyMiddleware } from \"redux\";\nimport { rootReducer } from \"./root-reducer\";\nimport logger from 'redux-logger';\n\n\nexport const store = createStore(rootReducer, applyMiddleware(logger)); */\n\nimport { createStore, applyMiddleware } from \"redux\";\nimport { rootReducer } from \"./root-reducer\";\nimport logger from 'redux-logger';\n\n// Defina os tipos corretos para o middleware\nconst loggerMiddleware = logger;\nexport const store = createStore(rootReducer, applyMiddleware(loggerMiddleware));","map":{"version":3,"names":["createStore","applyMiddleware","rootReducer","logger","loggerMiddleware","store"],"sources":["/home/luiz/Documentos/projects/myshop/src/redux/store.ts"],"sourcesContent":["/* import { createStore, applyMiddleware } from \"redux\";\nimport { rootReducer } from \"./root-reducer\";\nimport logger from 'redux-logger';\n\n\nexport const store = createStore(rootReducer, applyMiddleware(logger)); */\n\nimport { createStore, applyMiddleware, Middleware, AnyAction, Dispatch } from \"redux\";\nimport { rootReducer } from \"./root-reducer\";\nimport logger from 'redux-logger';\n\n// Defina os tipos corretos para o middleware\nconst loggerMiddleware: Middleware<{}, any, Dispatch<AnyAction>> = logger;\n\nexport const store = createStore(rootReducer, applyMiddleware(loggerMiddleware));\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,WAAW,EAAEC,eAAe,QAAyC,OAAO;AACrF,SAASC,WAAW,QAAQ,gBAAgB;AAC5C,OAAOC,MAAM,MAAM,cAAc;;AAEjC;AACA,MAAMC,gBAA0D,GAAGD,MAAM;AAEzE,OAAO,MAAME,KAAK,GAAGL,WAAW,CAACE,WAAW,EAAED,eAAe,CAACG,gBAAgB,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}